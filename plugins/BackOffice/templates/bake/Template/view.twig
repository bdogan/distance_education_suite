{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
<?php
/**
 * @var @var \Backoffice\View\BackOfficeView $this
 * @var \{{ entityClass }} ${{ singularVar }}
 */

$this->Breadcrumbs->add(
    __('List {{ pluralHumanName }}'),
    [ 'action' => 'index' ]
);
$this->Breadcrumbs->add(
    h(${{ singularVar }}->{{ displayField }})
);
?>

{% set associations = {'BelongsTo': [], 'HasOne': [], 'HasMany': [], 'BelongsToMany': []}|merge(associations) %}
{% set fieldsData = Bake.getViewFieldsData(fields, schema, associations) %}
{% set associationFields = fieldsData.associationFields %}
{% set groupedFields = fieldsData.groupedFields %}
{% set pK = '$' ~ singularVar ~ '->' ~ primaryKey[0] %}
<div class="row">
    <aside class="col-md-3">
        <div class="list-group">
            <div class="list-group-item list-group-item-success"><?= __('Actions') ?></div>
            <?= $this->Html->link(__('Edit {{ singularHumanName }}'), ['action' => 'edit', {{ pK|raw }}], ['class' => 'list-group-item list-group-item-action']) ?>
            <?= $this->Form->postLink(
            __('Delete {{ singularHumanName }}'),
            ['action' => 'delete', {{ pK|raw }}],
            ['confirm' => __('Are you sure you want to delete # {0}?', {{ pK|raw }}), 'class' => 'list-group-item list-group-item-action border-top-0']
            ) ?>
            <?= $this->Html->link(__('List {{ singularHumanName }}'), [ 'action' => 'index' ], [ 'class' => 'list-group-item list-group-item-action' ]) ?>
            <?= $this->Html->link(__('New {{ singularHumanName }}'), ['action' => 'add'], ['class' => 'list-group-item list-group-item-action']) ?>
            {% set done = [] %}
        </div>
    </aside>
    <div class="col mt-2 mt-md-0">
        <div class="card">
            <div class="card-header">
                <?= h(${{ singularVar }}->{{ displayField }}) ?>
            </div>
            <div class="card-body">
                <table class="table">
                    {% if groupedFields['string'] %}
                        {% for field in groupedFields['string'] %}
                            {% if associationFields[field] %}
                                {% set details = associationFields[field] %}
                                <tr>
                                    <th><?= __('{{ details.property|humanize }}') ?></th>
                                    <td><?= ${{ singularVar }}->has('{{ details.property }}') ? $this->Html->link(${{ singularVar }}->{{ details.property }}->{{ details.displayField }}, ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar }}->{{ details.property }}->{{ details.primaryKey[0] }}]) : '' ?></td>
                                </tr>
                            {% else %}
                                <tr>
                                    <th><?= __('{{ field|humanize }}') ?></th>
                                    <td><?= h(${{ singularVar }}->{{ field }}) ?></td>
                                </tr>
                            {% endif %}
                        {% endfor %}
                    {% endif %}
                    {% if associations.HasOne %}
                        {% for alias, details in associations.HasOne %}
                            <tr>
                                <th><?= __('{{ alias|underscore|singularize|humanize }}') ?></th>
                                <td><?= ${{ singularVar }}->has('{{ details.property }}') ? $this->Html->link(${{ singularVar }}->{{ details.property }}->{{ details.displayField }}, ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar }}->{{ details.property }}->{{ details.primaryKey[0] }}]) : '' ?></td>
                            </tr>
                        {% endfor %}
                    {% endif %}
                    {% if groupedFields.number %}
                        {% for field in groupedFields.number %}
                            <tr>
                                <th><?= __('{{ field|humanize }}') ?></th>
                                <td><?= $this->Number->format(${{ singularVar }}->{{ field }}) ?></td>
                            </tr>
                        {% endfor %}
                    {% endif %}
                    {% if groupedFields.date %}
                        {% for field in groupedFields.date %}
                            <tr>
                                <th><?= __('{{ field|humanize }}') ?></th>
                                <td><?= h(${{ singularVar }}->{{ field }}) ?></td>
                            </tr>
                        {% endfor %}
                    {% endif %}
                    {% if groupedFields.boolean %}
                        {% for field in groupedFields.boolean %}
                            <tr>
                                <th><?= __('{{ field|humanize }}') ?></th>
                                <td><?= ${{ singularVar }}->{{ field }} ? __('Yes') : __('No'); ?></td>
                            </tr>
                        {% endfor %}
                    {% endif %}
                </table>
                {% if groupedFields.text %}
                    {% for field in groupedFields.text %}
                        <div class="text">
                            <strong><?= __('{{ field|humanize }}') ?></strong>
                            <blockquote>
                                <?= $this->Text->autoParagraph(h(${{ singularVar }}->{{ field }})); ?>
                            </blockquote>
                        </div>
                    {% endfor %}
                {% endif %}
                {% set relations = associations.BelongsToMany|merge(associations.HasMany) %}
                {% for alias, details in relations %}
                    {% set otherSingularVar = alias|variable %}
                    {% set otherPluralHumanName = details.controller|underscore|humanize %}
                    <div class="related">
                        <h4><?= __('Related {{ otherPluralHumanName }}') ?></h4>
                        <?php if (!empty(${{ singularVar }}->{{ details.property }})) : ?>
                        <div class="table table-striped">
                            <table>
                                <thead>
                                    <tr>
                                        {% for field in details.fields %}
                                            <th scope="col"><?= __('{{ field|humanize }}') ?></th>
                                        {% endfor %}
                                        <th scope="col" class="actions"><?= __('Actions') ?></th>
                                    </tr>
                                </thead>
                                <tbody>
                                <?php foreach (${{ singularVar }}->{{ details.property }} as ${{ otherSingularVar }}) : ?>
                                    <tr>
                                        {% for field in details.fields %}
                                            <td><?= h(${{ otherSingularVar }}->{{ field }}) ?></td>
                                        {% endfor %}
                                        {% set otherPk = '$' ~ otherSingularVar ~ '->' ~ details.primaryKey[0] %}
                                        <td class="actions">
                                            <div class="btn-group btn-group-sm" role="group">
                                                <?= $this->Html->link($this->BackOffice->icon('launch', 'md-16'), ['controller' => '{{ details.controller }}', 'action' => 'view', {{ otherPk|raw }}], [ 'escape' => false, 'class' => 'btn btn-dark', 'title' => 'Göster', 'data-toggle' => 'tooltip' ]) ?>
                                                <?= $this->Html->link($this->BackOffice->icon('create', 'md-16'), ['controller' => '{{ details.controller }}', 'action' => 'edit', {{ otherPk|raw }}], [ 'escape' => false, 'class' => 'btn btn-dark', 'title' => 'Düzenle', 'data-toggle' => 'tooltip' ]) ?>
                                                <?= $this->Form->postLink($this->BackOffice->icon('clear', 'md-16'), ['controller' => '{{ details.controller }}', 'action' => 'delete', {{ otherPk|raw }}], [ 'confirm' => __('{0} no`lu kayıt silinecek emin misiniz?', {{ otherPk|raw }}), 'escape' => false, 'class' => 'btn btn-dark', 'title' => 'Sil', 'data-toggle' => 'tooltip' ]) ?>
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                                <?php endforeach; ?>
                            </table>
                        </div>
                        <?php endif; ?>
                    </div>
                {% endfor %}
            </div>
        </div>
    </div>
</div>
