{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
{% set fields = Bake.filterFields(fields, schema, modelObject) %}
<div class="row">
    <aside class="col-md-3">
        <div class="list-group">
            <div class="list-group-item list-group-item-success"><?= __('Actions') ?></div>
{% if 'add' not in action %}
            <?= $this->Form->postLink(
               __('Delete'),
               ['action' => 'delete', ${{ singularVar }}->{{ primaryKey[0] }}],
               ['confirm' => __('Are you sure you want to delete # {0}?', ${{ singularVar }}->{{ primaryKey[0] }}), 'class' => 'list-group-item list-group-item-action border-top-0']
            ) ?>
{% endif %}
            <?= $this->Html->link(__('List {{ pluralHumanName }}'), [ 'action' => 'index' ], [ 'class' => 'list-group-item list-group-item-action' ]) ?>
            {{- "\n" }}
{%- set done = [] %}
        </div>
    </aside>
    <div class="col mt-2 mt-md-0">
        <div class="card {{ pluralVar }}">
            <div class="card-header">
                <?= __('{{ action|humanize }} {{ singularHumanName }}') ?>
            </div>
            <div class="card-body">
                <?= $this->Form->create(${{ singularVar }}) ?>
                <?php
{% for field in fields %}
{%- if field not in primaryKey %}
    {%- if keyFields[field] %}
        {%- set fieldData = Bake.columnData(field, schema) %}
        {%- if fieldData.null %}
                    echo $this->Form->control('{{ field }}', ['options' => ${{ keyFields[field] }}, 'empty' => true]);
                    {{- "\n" }}
        {%- else %}
                    echo $this->Form->control('{{ field }}', ['options' => ${{ keyFields[field] }}]);
                    {{- "\n" }}
        {%- endif %}
    {%- elseif field not in ['created', 'modified', 'updated'] %}
        {%- set fieldData = Bake.columnData(field, schema) %}
        {%- if fieldData.type in ['date', 'datetime', 'time'] and fieldData.null %}
                    echo $this->Form->control('{{ field }}', ['empty' => true]);
                    {{- "\n" }}
        {%- else %}
                    echo $this->Form->control('{{ field }}');
                    {{- "\n" }}
        {%- endif %}
    {%- endif %}
{%- endif %}
{%- endfor %}

{%- if associations.BelongsToMany %}
{%- for assocName, assocData in associations.BelongsToMany %}
                    echo $this->Form->control('{{ assocData.property }}._ids', ['options' => ${{ assocData.variable }}]);
                    {{- "\n" }}
{%- endfor %}
{% endif %}
                ?>
                <?= $this->Form->button(__('Submit'), [ 'class' => 'btn btn-primary mt-3' ]) ?>
                <?= $this->Form->end() ?>
            </div>
        </div>
    </div>
</div>
